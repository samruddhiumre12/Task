<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat Application</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }

    .hidden {
      display: none;
    }

    .login-container,
    .register-container {
      max-width: 400px;
      margin: 100px auto;
      text-align: center;
    }

    .chat-container {
      display: flex;
      height: 100vh;
    }

    .sidebar {
      width: 250px;
      background-color: #f7f7f7;
      border-right: 1px solid #ddd;
      padding: 20px;
      position: fixed;
      top: 0;
      left: 0;
      height: 100vh;
      overflow-y: auto;
    }

    .chat-window {
      flex: 1;
      display: flex;
      flex-direction: column;
      margin-left: 250px; /* Push content to the right of the sidebar */
      padding: 20px;
    }

    #chat-box {
      flex: 1;
      overflow-y: auto;
      padding: 20px;
      border-bottom: 1px solid #ddd;
    }

    #message-input {
      width: 80%;
      padding: 10px;
    }

    button {
      padding: 10px;
    }

    ul {
      list-style: none;
      padding: 0;
    }

    li {
      padding: 10px;
      cursor: pointer;
      border-bottom: 1px solid #ddd;
    }

    li:hover {
      background-color: #eaeaea;
    }
  </style>
</head>
<body>
  <div class="login-container">
    <h2>Login</h2>
    <input type="text" id="login-username" placeholder="Username" required>
    <input type="password" id="login-password" placeholder="Password" required>
    <button onclick="login()">Login</button>
    <p>Don't have an account? <a href="#" onclick="showRegister()">Register here</a></p>
  </div>

  <div class="register-container hidden">
    <h2>Register</h2>
    <input type="text" id="register-username" placeholder="Username" required>
    <input type="password" id="register-password" placeholder="Password" required>
    <button onclick="register()">Register</button>
    <p>Already have an account? <a href="#" onclick="showLogin()">Login here</a></p>
  </div>

  <div class="chat-container hidden">
    <div class="sidebar">
      <h3>Users</h3>
      <ul id="user-list"></ul>
    </div>
    <div class="chat-window">
      <div id="chat-box"></div>
      <input type="text" id="message-input" placeholder="Type a message">
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    let socket = io();
    let currentUser = null;
    let selectedUser = null;

    function showRegister() {
      document.querySelector('.login-container').classList.add('hidden');
      document.querySelector('.register-container').classList.remove('hidden');
    }

    function showLogin() {
      document.querySelector('.login-container').classList.remove('hidden');
      document.querySelector('.register-container').classList.add('hidden');
    }

    function login() {
      const username = document.getElementById('login-username').value;
      const password = document.getElementById('login-password').value;

      fetch('/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password })
      })
      .then(res => res.text())
      .then(message => {
        if (message === 'Logged in') {
          currentUser = username;
          document.querySelector('.login-container').classList.add('hidden');
          document.querySelector('.chat-container').classList.remove('hidden');
          loadUsers();
        } else {
          alert('Invalid credentials');
        }
      });
    }

    function register() {
      const username = document.getElementById('register-username').value;
      const password = document.getElementById('register-password').value;

      fetch('/register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password })
      })
      .then(res => res.text())
      .then(message => {
        alert(message);
        showLogin();
      });
    }

    function loadUsers() {
      fetch('/users')
        .then(res => res.json())
        .then(users => {
          const userList = document.getElementById('user-list');
          userList.innerHTML = '';
          users.forEach(user => {
            if (user.username !== currentUser) {
              const li = document.createElement('li');
              li.textContent = user.username;
              li.onclick = () => {
                selectedUser = user.username;
                loadMessages();
              };
              userList.appendChild(li);
            }
          });
        });
    }

    function loadMessages() {
      fetch(`/messages?sender=${currentUser}&receiver=${selectedUser}`)
        .then(res => res.json())
        .then(messages => {
          const chatBox = document.getElementById('chat-box');
          chatBox.innerHTML = '';
          messages.forEach(msg => {
            const div = document.createElement('div');
            div.textContent = `${msg.sender}: ${msg.message}`;
            chatBox.appendChild(div);
          });
        });
    }

    function sendMessage() {
      const message = document.getElementById('message-input').value;
      socket.emit('sendMessage', { sender: currentUser, receiver: selectedUser, message });
      document.getElementById('message-input').value = '';
    }

    socket.on('newMessage', (message) => {
      if ((message.sender === currentUser && message.receiver === selectedUser) ||
          (message.sender === selectedUser && message.receiver === currentUser)) {
        const chatBox = document.getElementById('chat-box');
        const div = document.createElement('div');
        div.textContent = `${message.sender}: ${message.message}`;
        chatBox.appendChild(div);
      }
    });
  </script>
</body>
</html>
